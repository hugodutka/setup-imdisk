name: "Setup ImDisk"
if: runner.os == 'Windows'
description: |
  Sets up the ImDisk toolkit for Windows and backs often-used paths with RAM disks
runs:
  using: "composite"
  steps:
    - name: Download ImDisk
      if: runner.os == 'Windows'
      shell: bash
      run: |
        mkdir imdisk
        cd imdisk
        curl -L -o files.cab https://github.com/coder/imdisk-artifacts/raw/92a17839ebc0ee3e69be019f66b3e9b5d2de4482/files.cab
        curl -L -o install.bat https://github.com/coder/imdisk-artifacts/raw/92a17839ebc0ee3e69be019f66b3e9b5d2de4482/install.bat
        cd ..

    - name: Install ImDisk
      shell: cmd
      run: |
        cd imdisk
        install.bat /silent

    - name: Create RAM Disks
      shell: bash
      run: |
        # RAM disk for postgres mounted on R:
        imdisk -a -s 4096M -m R: -p "/fs:ntfs /q /y"

        # RAM disk for temp files. It's used by actions/cache, actions/setup-go, etc.
        # We need to persist the existing contents because some actions rely on it.
        mkdir "$RUNNER_TEMP"_tmp
        cp -r "$RUNNER_TEMP"/. "$RUNNER_TEMP"_tmp
        rm -rf "$RUNNER_TEMP"/*
        imdisk -a -s 8192M -m "$RUNNER_TEMP" -p "/fs:ntfs /q /y"
        cp -r "$RUNNER_TEMP"_tmp/. "$RUNNER_TEMP"
        rm -rf "$RUNNER_TEMP"_tmp

        # RAM disk for go cache and mod cache
        # cd to another directory to ensure we're not inside a go project.
        # That'd trigger go to download the toolchain for that project.
        cd "$RUNNER_TEMP"
        export GOCACHE="$(go env GOCACHE)"
        export GOMODCACHE="$(go env GOMODCACHE)"
        rm -rf "$GOCACHE"
        rm -rf "$GOMODCACHE"
        mkdir -p "$GOCACHE"
        mkdir -p "$GOMODCACHE"
        imdisk -a -s 8192M -m "$GOCACHE" -p "/fs:ntfs /q /y"
        imdisk -a -s 8192M -m "$GOMODCACHE" -p "/fs:ntfs /q /y"

        # RAM disk for the repository
        rm -rf "$GITHUB_WORKSPACE"/*
        # Use exfat instead of ntfs because ntfs creates an unremovable
        # "System Volume Information" directory that makes actions/checkout fail.
        # exfat is empty on creation
        imdisk -a -s 2048M -m "$GITHUB_WORKSPACE" -p "/fs:exfat /q /y"
        # node's fs.promises.readdir used by actions/checkout fails if the
        # directory is empty.
        touch "$GITHUB_WORKSPACE"/dummy.txt
