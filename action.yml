name: "Setup Arsenal Image Mounter"
if: runner.os == 'Windows'
description: |
  Sets up the Arsenal Image Mounter for Windows and backs often-used paths with RAM disks
runs:
  using: "composite"
  steps:
    - name: Download and install Arsenal Image Mounter
      shell: bash
      run: |
        set -e

        cd ~/

        mkdir aim
        cd aim
        curl -L -o aim_ll.zip https://github.com/ArsenalRecon/Arsenal-Image-Mounter/raw/5961f922c5b99ec29acc4af4b60b909b402eed95/Command%20line%20applications/aim_ll.zip
        # unzip properly extracts everything but warns that "aim_ll.zip appears to use backslashes as path separators"
        # it then exits with a non-zero status code. the warning is harmless, so we ignore it.
        unzip aim_ll.zip || true
        mkdir ~/bin
        mv x64/* ~/bin

        curl -L -o DriverFiles.zip https://github.com/ArsenalRecon/Arsenal-Image-Mounter/raw/5961f922c5b99ec29acc4af4b60b909b402eed95/DriverSetup/DriverFiles.zip
        # like above
        unzip DriverFiles.zip -d DriverFiles || true
        aim_ll --install DriverFiles

    - name: Create RAM Disks
      shell: bash
      run: |
        # RAM disk for postgres mounted on R:
        aim_ll -a -s "90%" -m R: -p "/fs:ntfs /q /y"

        # RAM disk for temp files. It's used by actions/cache, actions/setup-go, etc.
        # We need to persist the existing contents because some actions rely on it.
        mkdir "$RUNNER_TEMP"_tmp
        cp -r "$RUNNER_TEMP"/. "$RUNNER_TEMP"_tmp
        rm -rf "$RUNNER_TEMP"/*
        aim_ll -a -s "90%" -m "$RUNNER_TEMP" -p "/fs:ntfs /q /y"
        cp -r "$RUNNER_TEMP"_tmp/. "$RUNNER_TEMP"
        rm -rf "$RUNNER_TEMP"_tmp

        # RAM disk for the repository
        rm -rf "$GITHUB_WORKSPACE"/*
        # Use exfat instead of ntfs because ntfs creates an unremovable
        # "System Volume Information" directory that makes actions/checkout fail.
        # exfat is empty on creation
        aim_ll -a -s "90%" -m "$GITHUB_WORKSPACE" -p "/fs:exfat /q /y"
        # node's fs.promises.readdir used by actions/checkout fails if the
        # directory is empty.
        touch "$GITHUB_WORKSPACE"/dummy.txt
